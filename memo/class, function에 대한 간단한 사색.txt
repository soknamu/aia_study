class와 function의 의미 : 이성호

function은 def 를 이용해 단순히 정의를 내린뒤, 결과값을 반환해주는 역할밖에 하지못했는데,
이는 수학에서 다루는 함수와 같다고 생각한다. 정의역과 공역, 치역을 설정해주고, 조건이 맞다면
input을 output으로 반환해준다고 생각한다. 당연히 학문에서의 함수는 실수나 복소수등의 숫자
형태로 제한되겠지만( 숫자input -> 숫자output 형태 ) 여기서 다루는 function의 의미가
문자열의 형태도 반환이 가능하기 때문에 조금 더 넓은 의미라고 생각했다.

다만, 학문에서의 함수로 바이어슈트라스 함수(모든 점에서 연속이나, 모든 점에서 미분 불가능한 함수)나,
모든 유리수는 1로 반환하고, 모든 무리수는 0으로 반환하는 디리클레 함수와 같은 식으로 표현하기 상당히 복잡한
형태의 함수들도 존재하며, 복소수의 계산도 수학적으로는 복소 평면을 이용한 복소 함수로 계산되기 때문에,
어느쪽의 함수가 더 넓은지, 언어에서의 함수와 수학에서의 함수는 교집합이 있는 서로 다른 집합인지,
언어에서의 함수가 수학에서의 함수를 부분집합으로 갖는지에 대해 생각을 해보았다.
주관적인 생각으로는 아직 표현하는 방법들을 알지 못해서 그렇지,
언어에서의 함수로 복잡한 꼴의 함수들도 표현할 방법이 존재할 것 같아서 후자일 것 같다.

Class는 확실하게 언어에서의 function 개념을 부분집합으로 갖는 더 큰 집합이고,
class를 이해하기 위해서는 OOD(Object-Oriented Design)을 알아야 한다고 설명하였다.
최종목표는 소프트웨어에 객체(object)를 구현하는 것이며,
class는 객체를 만들기 위한 설계도 혹은 틀이며 관련되어 있는 변수와 메서드의 집합이라고 한다.

또 여기서 객체와 인스턴스를 구분할 필요가 있다고 하였다.
클래스의 타입으로 선언되었을 때는 객체, 실제 메모리에 할당되어 사용할때는 인스턴스라고 부른다고한다.
다만, 이 내용은 출처마다 내용과 사실관계가 정확하지 않아,
https://alfredjava.wordpress.com/2008/07/08/class-vs-object-vs-instance/
해당 외국인의 설명을 참고했음을 미리 밝힌다. 
이처럼 객체와 인스턴스 사이의 정의는 모호하다고 생각하나, 이를 통해 클래스와
객체/인스턴스의 차이는 더 분명히 알게되었다. 클래스는 '설계도(blueprint)'인것이고,
객체/인스턴스는 건물인것이다. 위 사이트의 글을 읽고, 객체/인스턴스와 클래스는 대체 누가 정의를 한 것인지,
정의를 한 사람이 언어학적으로 너무 모호하게 정의를 내리지 않았는지, 또 인터넷이라는 정보의 바다에서,
지식 습득을 위한 가장 기초적인 단계를 밟았을 뿐인데 잘못되거나 설명이 명확하지 않은 정보가 나왔다는 점에 대해
화가 났다. 우리는 항상 정의와 기초에 대해 튼튼하게 다질 필요가 있다.
대학교때 들었던 물리화학 시간에 깁스 자유에너지와 chemical potential, fugacity 등의 개념에 대해 교수님께서 질문하였고,
한 학생이 수식으로 간단하게 말하자, 가장 중요한 것은 정의를 올바르게 알고 출발하는 것인데, 학생은
그저 고등학교 수준의 사고인 수식 외우기에 불과하다고 소리치셨던 장면이 오버랩 되었다.
이 장면이 기억에 남는 이유는 주변 동기들을 포함하여 나도 완벽한 대답이라고 생각했던게, 사실은 더 엄밀한
정의가 있었고 전공책을 다 공부하고 돌이켜보니, 교수님께서 하신말씀이 맞다고 생각이 변화했기 때문이다.

한편, 함수와 대조되는 클래스가 가지는 몇개의 특징들을 살펴보았는데, 크게 상속성과 다형성이 있었다.
상속성은 기존의 클래스를 다시 사용하여 확장한 형태의 새로운 클래스를 만들 수 있다는 것이였고,
다형성은 같은 이름의 메서드나 함수가 다른 객체에서 다르게 동작하는 것을 말한다고 하였다.
상태와 메서드의 차이는 학부때 열역학을 배우면서 상태함수(state function)과 경로함수(path function)을 배웠었는데,
비슷한 느낌의 내용인 것 같아 이해에 도움이 된 것 같았다.

총평 : 이런 작은 개념 하나 조차 자세히 들어가면 논문을 적을 수 있을것만 같다.