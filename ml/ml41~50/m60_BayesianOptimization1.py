param_bounds = {'x1' : (-1,5),
               'x2' : (0,4)} #딕셔너리 #텍스트 형태('x1')로 넣어주고, 범위를 튜플()로 넣어줘야됨.

def y_function(x1,x2):
    return -x1**2 - (x2 -2 )**2 + 10 #이함수의 최댓값

#분류모델은 return값을 accuarcy_score로 함.
#회귀모델은 return값을 mae,mse 등등 쓰고 부호를 -를 붙힘.

# 이 함수의 최댓값을 구하기. 함수 값이 가장 높은 값을 찾는거 = bayesianoptimization
#pip install bayesian-optimization
from bayes_opt import BayesianOptimization

optimizer = BayesianOptimization(
    f = y_function,
    pbounds=param_bounds,
    random_state=337
)

optimizer.maximize(init_points=10, #두개의 랜덤값찾기
                   n_iter=150) #20번 찾기 

print(optimizer.max)
# |   iter    |  target   |    x1     |    x2     |
# -------------------------------------------------
# | 1         | -6.356    | 3.799     | 0.6143    |
# | 2         | 0.9635    | 2.407     | 0.1988    |
# | 3         | -3.961    | 3.207     | 0.08218   |
# | 4         | 0.6734    | 2.498     | 0.2429    |
# | 5         | 6.848     | 1.504     | 1.057     |
# | 6         | 9.805     | 0.2989    | 2.325     |
# | 7         | 3.928     | 1.439     | 4.0       |
# | 8         | 7.704     | -1.0      | 0.8618    |
# | 9         | 5.281     | -1.0      | 3.928     |
# | 10        | 8.955     | -1.0      | 2.211     |
# | 11        | 9.723     | 0.04416   | 1.475     |
# | 12        | 9.937     | -0.2417   | 2.065     |
# | 13        | 9.758     | 0.4759    | 1.874     |
# | 14        | 9.993     | 0.07269   | 1.957     |
# | 15        | 9.811     | -0.1515   | 2.407     |
# | 16        | 9.985     | 0.01247   | 2.122     |
# | 17        | 9.985     | -0.07274  | 1.899     |
# | 18        | 9.999     | -0.02137  | 2.009     |
# | 19        | 10.0      | -0.01204  | 2.005     |
# | 20        | 10.0      | -0.00669  | 2.002     |
# | 21        | 10.0      | 0.0006181 | 2.0       |
# | 22        | 9.998     | 0.04323   | 2.008     |
# =================================================
# {'target': 9.99999961356361, 'params': {'x1': 0.0006180519564767498, 'x2': 2.0000666946010077}}

#보라색 글씨는 갱신되었다는 뜻.